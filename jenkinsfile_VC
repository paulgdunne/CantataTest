pipeline {
    agent any

    stages {
        stage('Compile Source') {
            steps {
                echo "Compiling Source Code ..."
              dir("reverse_string"){
                  bat 'gcc.exe -c -o reverse_string.o reverse_string.c'
              }
            }
         }
        stage('Static Metric Thresholds') {
            steps {
                echo "Checking Static Metrics ..."
         // Check vs source file.csv for Metric thresholds.  Fail if exceeded.
            }
         }

        stage('Impacted Unit Tests') {
            environment {
                PATH = "C:\\qa_systems\\cantata;C:\\qa_systems\\cantata\\MinGW\\msys\\1.0\\bin;$PATH"
            }
            steps {
                echo 'Running Cantata Tests ...'
                dir("reverse_string/Cantata/tests"){
                    bat 'make clean'
                    bat 'set JENKINS_BUILD_ID=%BUILD_TAG%'
                    bat 'make all EXECUTE=1 OUTPUT_TO_CONSOLE=1'
                }
                   echo 'Generating Cantata HTML Report ...'
                dir("reverse_string"){
                    bat 'cantpp -application com.ipl.products.eclipse.cantpp.cdt.TestReportGenerator -noSplash -data .. . HTML_DETAILED_REPORT'
                }
            }
        }
        stage('Tests are RBTs') {
            steps {
                echo "Checking Tests have associate requirements ..."
         // Check Test Cases have at least 1 requirement traced to them via REST API call to Cantata Server.  Fail if not.
            }
         }
    }
}
